apiVersion: kafka.strimzi.io/v1alpha1
kind: Kafka
metadata:
  name: my-persistent-cluster
spec:
  kafka:
    version: 2.5.0
    replicas: 3
    resources:
      requests:
        memory: 2Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: "1"
    jvmOptions: 
      -Xms: 1536m
      -Xmx: 1536m
    readinessProbe:
      initialDelaySeconds: 60
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 60
      timeoutSeconds: 5
    listeners:
      # Enable the plain interface
      plain: {}
      # Enable the TLS interface
      tls: {}
    config:
      auto.create.topics.enable: "false"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.message.format.version: "2.5"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        class: ocs-storagecluster-ceph-rbd
        deleteClaim: false
    metrics:
      lowercaseOutputName: true
      lowercaseOutputLabelNames: true
      rules:
      - pattern : kafka.server<type=ReplicaManager, name=(.+)><>(Value|OneMinuteRate)
        name: "kafka_server_replicamanager_$1"
      - pattern : kafka.controller<type=KafkaController, name=(.+)><>Value
        name: "kafka_controller_kafkacontroller_$1"
      - pattern : kafka.server<type=BrokerTopicMetrics, name=(.+)><>OneMinuteRate
        name: "kafka_server_brokertopicmetrics_$1"
      - pattern : kafka.network<type=RequestMetrics, name=RequestsPerSec, request=(.+)><>OneMinuteRate
        name: "kafka_network_requestmetrics_requestspersec_$1"
      - pattern : kafka.network<type=SocketServer, name=NetworkProcessorAvgIdlePercent><>Value
        name: "kafka_network_socketserver_networkprocessoravgidlepercent"
      - pattern : kafka.server<type=ReplicaFetcherManager, name=MaxLag, clientId=(.+)><>Value
        name: "kafka_server_replicafetchermanager_maxlag_$1"
      - pattern : kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>OneMinuteRate
        name: "kafka_kafkarequesthandlerpool_requesthandleravgidlepercent"
      - pattern : kafka.controller<type=ControllerStats, name=(.+)><>OneMinuteRate
        name: "kafka_controller_controllerstats_$1"
      - pattern : kafka.server<type=SessionExpireListener, name=(.+)><>OneMinuteRate
        name: "kafka_server_sessionexpirelistener_$1"
  zookeeper:
    replicas: 3
    resources:
      requests:
        memory: 2Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: 500m
    jvmOptions: 
      -Xms: 1536m
      -Xmx: 1536m
    storage:
      type: persistent-claim
      size: 100Gi
      class: ocs-storagecluster-ceph-rbd
      deleteClaim: false
    metrics:
      lowercaseOutputName: true
      lowercaseOutputLabelNames: true
      rules:
      - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)"
        name: "zookeeper_$2"
      - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+)><>(\\w+)"
        name: "zookeeper_$3"
        labels:
          replicaId: "$2"
      - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(\\w+)"
        name: "zookeeper_$4"
        labels:
          replicaId: "$2"
          memberType: "$3"
      - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)"
        name: "zookeeper_$4_$5"
        labels:
          replicaId: "$2"
          memberType: "$3"
  entityOperator:
    topicOperator:
      resources:
        requests:
          memory: 512Mi
          cpu: 500m
        limits:
          memory: 512Mi
          cpu: 500m
    userOperator:
      resources:
        requests:
          memory: 512Mi
          cpu: 500m
        limits:
          memory: 512Mi
          cpu: 500m